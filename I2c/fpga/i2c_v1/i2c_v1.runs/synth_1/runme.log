
*** Running xst
    with args -ifn top.xst -ofn top.srp -intstyle ise

Reading design: top.prj

=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "/home/saul/projects/digital/DIGIMP/I2c/fpga/i2c_v1/i2c_v1.srcs/sources_1/imports/I2c/I2C.v" into library work
Parsing module <I2C>.
Analyzing Verilog file "/home/saul/projects/digital/DIGIMP/I2c/fpga/i2c_v1/i2c_v1.srcs/sources_1/imports/I2c/top.v" into library work
Parsing module <top>.
Parsing module <tri_buf>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating module <top>.

Elaborating module <tri_buf>.

Elaborating module <I2C>.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <top>.
    Related source file is "/home/saul/projects/digital/DIGIMP/I2c/fpga/i2c_v1/i2c_v1.srcs/sources_1/imports/I2c/top.v".
    Summary:
	inferred  24 Multiplexer(s).
Unit <top> synthesized.

Synthesizing Unit <tri_buf>.
    Related source file is "/home/saul/projects/digital/DIGIMP/I2c/fpga/i2c_v1/i2c_v1.srcs/sources_1/imports/I2c/top.v".
    Found 1-bit tristate buffer for signal <out> created at line 99
    Summary:
	inferred   1 Tristate(s).
Unit <tri_buf> synthesized.

Synthesizing Unit <I2C>.
    Related source file is "/home/saul/projects/digital/DIGIMP/I2c/fpga/i2c_v1/i2c_v1.srcs/sources_1/imports/I2c/I2C.v".
        device_address = 7'b1010101
        STATE_IDLE = 3'b000
        STATE_DEV_ADDR = 3'b001
        STATE_READ = 3'b010
        STATE_IDX_PTR = 3'b011
        STATE_WRITE = 3'b100
    Found 1-bit register for signal <output_control>.
    Found 1-bit register for signal <start_resetter>.
    Found 3-bit register for signal <state>.
    Found 8-bit register for signal <index_pointer>.
    Found 8-bit register for signal <reg_00>.
    Found 8-bit register for signal <reg_01>.
    Found 8-bit register for signal <reg_02>.
    Found 8-bit register for signal <reg_03>.
    Found 4-bit register for signal <bit_counter>.
    Found 1-bit register for signal <master_ack>.
    Found 8-bit register for signal <output_shift>.
    Found 1-bit register for signal <start_detect>.
    Found 1-bit register for signal <input_shift<7>>.
    Found 1-bit register for signal <input_shift<6>>.
    Found 1-bit register for signal <input_shift<5>>.
    Found 1-bit register for signal <input_shift<4>>.
    Found 1-bit register for signal <input_shift<3>>.
    Found 1-bit register for signal <input_shift<2>>.
    Found 1-bit register for signal <input_shift<1>>.
    Found 1-bit register for signal <input_shift<0>>.
    Found finite state machine <FSM_0> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 5                                              |
    | Transitions        | 16                                             |
    | Inputs             | 5                                              |
    | Outputs            | 4                                              |
    | Clock              | SCL (falling_edge)                             |
    | Reset              | RSTN (negative)                                |
    | Reset type         | asynchronous                                   |
    | Reset State        | 000                                            |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 4-bit adder for signal <bit_counter[3]_GND_4_o_add_3_OUT> created at line 86.
    Found 8-bit adder for signal <index_pointer[7]_GND_4_o_add_20_OUT> created at line 178.
    Found 8-bit 4-to-1 multiplexer for signal <_n0164> created at line 224.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred  64 D-type flip-flop(s).
	inferred   9 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <I2C> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# Adders/Subtractors                                   : 2
 4-bit adder                                           : 1
 8-bit adder                                           : 1
# Registers                                            : 19
 1-bit register                                        : 12
 4-bit register                                        : 1
 8-bit register                                        : 6
# Multiplexers                                         : 33
 1-bit 2-to-1 multiplexer                              : 29
 8-bit 2-to-1 multiplexer                              : 3
 8-bit 4-to-1 multiplexer                              : 1
# Tristates                                            : 1
 1-bit tristate buffer                                 : 1
# FSMs                                                 : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


Synthesizing (advanced) Unit <I2C>.
The following registers are absorbed into counter <bit_counter>: 1 register on signal <bit_counter>.
The following registers are absorbed into counter <index_pointer>: 1 register on signal <index_pointer>.
Unit <I2C> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# Counters                                             : 2
 4-bit up counter                                      : 1
 8-bit up counter                                      : 1
# Registers                                            : 52
 Flip-Flops                                            : 52
# Multiplexers                                         : 39
 1-bit 2-to-1 multiplexer                              : 29
 1-bit 4-to-1 multiplexer                              : 8
 8-bit 2-to-1 multiplexer                              : 2
# FSMs                                                 : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <my_I2C/FSM_0> on signal <state[1:3]> with sequential encoding.
-------------------
 State | Encoding
-------------------
 000   | 000
 011   | 001
 010   | 010
 100   | 011
 001   | 100
-------------------
WARNING:Xst:3002 - This design contains one or more registers/latches that are directly
   incompatible with the Spartan6 architecture. The two primary causes of this is
   either a register or latch described with both an asynchronous set and
   asynchronous reset, or a register or latch described with an asynchronous
   set or reset which however has an initialization value of the opposite 
   polarity (i.e. asynchronous reset with an initialization value of 1).
    While this circuit can be built, it creates a sub-optimal implementation
   in terms of area, power and performance. For a more optimal implementation
   Xilinx highly recommends one of the following:

          1) Remove either the set or reset from all registers and latches
             if not needed for required functionality
          2) Modify the code in order to produce a synchronous set
             and/or reset (both is preferred)
          3) Ensure all registers have the same initialization value as the
             described asynchronous set or reset polarity
          4) Use the -async_to_sync option to transform the asynchronous
             set/reset to synchronous operation
             (timing simulation highly recommended when using this option)

  Please refer to http://www.xilinx.com search string "Spartan6 asynchronous set/reset" for more details.

  List of register instances with asynchronous set and reset:
    input_shift_0 in unit <I2C>
    input_shift_1 in unit <I2C>
    input_shift_2 in unit <I2C>
    input_shift_3 in unit <I2C>
    input_shift_5 in unit <I2C>
    input_shift_6 in unit <I2C>
    input_shift_4 in unit <I2C>
    input_shift_7 in unit <I2C>


Optimizing unit <top> ...

Optimizing unit <I2C> ...

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 0) on block top, actual ratio is 1.

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 75
 Flip-Flops                                            : 75

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Clock Information:
------------------
-------------------------------------------------------------------------+----------------------------------+-------+
Clock Signal                                                             | Clock buffer(FF name)            | Load  |
-------------------------------------------------------------------------+----------------------------------+-------+
SW2                                                                      | IBUF+BUFG                        | 74    |
SW0                                                                      | IBUF+BUFG                        | 1     |
my_I2C/RST_input_shift[7]_AND_27_o(my_I2C/RST_input_shift[7]_AND_27_o1:O)| NONE(*)(my_I2C/input_shift_0_LDC)| 1     |
my_I2C/RST_input_shift[7]_AND_25_o(my_I2C/RST_input_shift[7]_AND_25_o1:O)| NONE(*)(my_I2C/input_shift_1_LDC)| 1     |
my_I2C/RST_input_shift[7]_AND_23_o(my_I2C/RST_input_shift[7]_AND_23_o1:O)| NONE(*)(my_I2C/input_shift_2_LDC)| 1     |
my_I2C/RST_input_shift[7]_AND_21_o(my_I2C/RST_input_shift[7]_AND_21_o1:O)| NONE(*)(my_I2C/input_shift_3_LDC)| 1     |
my_I2C/RST_input_shift[7]_AND_17_o(my_I2C/RST_input_shift[7]_AND_17_o1:O)| NONE(*)(my_I2C/input_shift_5_LDC)| 1     |
my_I2C/RST_input_shift[7]_AND_15_o(my_I2C/RST_input_shift[7]_AND_15_o1:O)| NONE(*)(my_I2C/input_shift_6_LDC)| 1     |
my_I2C/RST_input_shift[7]_AND_19_o(my_I2C/RST_input_shift[7]_AND_19_o1:O)| NONE(*)(my_I2C/input_shift_4_LDC)| 1     |
my_I2C/RST_input_shift[7]_AND_13_o(my_I2C/RST_input_shift[7]_AND_13_o1:O)| NONE(*)(my_I2C/input_shift_7_LDC)| 1     |
-------------------------------------------------------------------------+----------------------------------+-------+
(*) These 8 clock signal(s) are generated by combinatorial logic,
and XST is not able to identify which are the primary clock signals.
Please use the CLOCK_SIGNAL constraint to specify the clock signal(s) generated by combinatorial logic.
INFO:Xst:2169 - HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -2

   Minimum period: 10.102ns (Maximum Frequency: 98.990MHz)
   Minimum input arrival time before clock: 5.012ns
   Maximum output required time after clock: 6.414ns
   Maximum combinational path delay: 7.589ns

=========================================================================
